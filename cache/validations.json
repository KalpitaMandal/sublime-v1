{
  "version": "3",
  "log": [
    {
      "GovernanceTester": {
        "version": {
          "withMetadata": "8a8f3c324bf39fb5e6d8fa248d828747d39ed557201d689d136b01e5635c2e58",
          "withoutMetadata": "f133b6dff4840ab8ad62660a217d91faa8bca1cc693d7cde4c4fe17b0b943dd6",
          "linkedWithoutMetadata": "f133b6dff4840ab8ad62660a217d91faa8bca1cc693d7cde4c4fe17b0b943dd6"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GovernanceTester",
            "src": "contracts/mocks/GovernanceTester.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GovernanceTester",
              "label": "gov",
              "type": "t_address",
              "src": "contracts/mocks/GovernanceTester.sol:6"
            },
            {
              "contract": "GovernanceTester",
              "label": "value",
              "type": "t_uint256",
              "src": "contracts/mocks/GovernanceTester.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "FluxAggregator": {
        "version": {
          "withMetadata": "27eca31b412ac02f7e59922104ed7985e75e9669579e2082e58a931a34ea3212",
          "withoutMetadata": "78c1ab5450ca22cfaa86c6be8f8100772c673fbfb52e5974c40e0a4046a0270e",
          "linkedWithoutMetadata": "78c1ab5450ca22cfaa86c6be8f8100772c673fbfb52e5974c40e0a4046a0270e"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "version",
            "src": "contracts/mocks/FluxAggregator.sol:5"
          },
          {
            "kind": "state-variable-assignment",
            "name": "value",
            "src": "contracts/mocks/FluxAggregator.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "latestRoundId",
            "src": "contracts/mocks/FluxAggregator.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "FluxAggregator",
              "label": "version",
              "type": "t_uint256",
              "src": "contracts/mocks/FluxAggregator.sol:5"
            },
            {
              "contract": "FluxAggregator",
              "label": "decimals",
              "type": "t_uint8",
              "src": "contracts/mocks/FluxAggregator.sol:6"
            },
            {
              "contract": "FluxAggregator",
              "label": "description",
              "type": "t_string_storage",
              "src": "contracts/mocks/FluxAggregator.sol:7"
            },
            {
              "contract": "FluxAggregator",
              "label": "value",
              "type": "t_int256",
              "src": "contracts/mocks/FluxAggregator.sol:9"
            },
            {
              "contract": "FluxAggregator",
              "label": "latestRoundId",
              "type": "t_uint80",
              "src": "contracts/mocks/FluxAggregator.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint80": {
              "label": "uint80"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Migrations": {
        "version": {
          "withMetadata": "71bf2d0c104e8089c2828e327c1e349455f16eb11d116d70ffda455e532c15f8",
          "withoutMetadata": "5e9a930d422fc2cdb9120658e99d215c882773554764e974cf2cac295f8bfb2c",
          "linkedWithoutMetadata": "5e9a930d422fc2cdb9120658e99d215c882773554764e974cf2cac295f8bfb2c"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "owner",
            "src": "contracts/Migrations.sol:5"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Migrations",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/Migrations.sol:5"
            },
            {
              "contract": "Migrations",
              "label": "last_completed_migration",
              "type": "t_uint256",
              "src": "contracts/Migrations.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ILender": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "SafeMath": {
        "version": {
          "withMetadata": "81a224a058d83e8ba5e053e9cbe7eaa1b022605bea38853faf981dc78c043bce",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timelock": {
        "version": {
          "withMetadata": "63f83b3ea18b59153082cbec3bf8acad300360746cba62e9c151dff808332b75",
          "withoutMetadata": "63f83b3ea18b59153082cbec3bf8acad300360746cba62e9c151dff808332b75",
          "linkedWithoutMetadata": "63f83b3ea18b59153082cbec3bf8acad300360746cba62e9c151dff808332b75"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Timelock",
            "src": "contracts/governance/Timelock.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Timelock",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/governance/Timelock.sol:42"
            },
            {
              "contract": "Timelock",
              "label": "pendingAdmin",
              "type": "t_address",
              "src": "contracts/governance/Timelock.sol:43"
            },
            {
              "contract": "Timelock",
              "label": "delay",
              "type": "t_uint256",
              "src": "contracts/governance/Timelock.sol:44"
            },
            {
              "contract": "Timelock",
              "label": "queuedTransactions",
              "type": "t_mapping(t_bytes32,t_bool)",
              "src": "contracts/governance/Timelock.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "GovernorAlpha": {
        "version": {
          "withMetadata": "5ea85b0c17fc2839aafd07fa3f234c07a2f72e0b183cb42b04f470c2925755cb",
          "withoutMetadata": "0bf6d34211d3a31878756727a3b278ae83e7e1b44daffb01151cdcc1ce3864fb",
          "linkedWithoutMetadata": "0bf6d34211d3a31878756727a3b278ae83e7e1b44daffb01151cdcc1ce3864fb"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GovernorAlpha",
            "src": "contracts/governance/GovernorAlpha.sol:146"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GovernorAlpha",
              "label": "timelock",
              "type": "t_contract(TimelockInterface)1319",
              "src": "contracts/governance/GovernorAlpha.sol:36"
            },
            {
              "contract": "GovernorAlpha",
              "label": "LIME",
              "type": "t_contract(LIMEInterface)1329",
              "src": "contracts/governance/GovernorAlpha.sol:39"
            },
            {
              "contract": "GovernorAlpha",
              "label": "guardian",
              "type": "t_address",
              "src": "contracts/governance/GovernorAlpha.sol:42"
            },
            {
              "contract": "GovernorAlpha",
              "label": "proposalCount",
              "type": "t_uint256",
              "src": "contracts/governance/GovernorAlpha.sol:45"
            },
            {
              "contract": "GovernorAlpha",
              "label": "proposals",
              "type": "t_mapping(t_uint256,t_struct(Proposal)98_storage)",
              "src": "contracts/governance/GovernorAlpha.sol:101"
            },
            {
              "contract": "GovernorAlpha",
              "label": "latestProposalIds",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/governance/GovernorAlpha.sol:104"
            }
          ],
          "types": {
            "t_contract(TimelockInterface)1319": {
              "label": "contract TimelockInterface"
            },
            "t_contract(LIMEInterface)1329": {
              "label": "contract LIMEInterface"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Proposal)98_storage)": {
              "label": "mapping(uint256 => struct GovernorAlpha.Proposal)"
            },
            "t_struct(Proposal)98_storage": {
              "label": "struct GovernorAlpha.Proposal",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256"
                },
                {
                  "label": "proposer",
                  "type": "t_address"
                },
                {
                  "label": "eta",
                  "type": "t_uint256"
                },
                {
                  "label": "targets",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "signatures",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "calldatas",
                  "type": "t_array(t_bytes_storage)dyn_storage"
                },
                {
                  "label": "startBlock",
                  "type": "t_uint256"
                },
                {
                  "label": "endBlock",
                  "type": "t_uint256"
                },
                {
                  "label": "forVotes",
                  "type": "t_uint256"
                },
                {
                  "label": "againstVotes",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "executed",
                  "type": "t_bool"
                },
                {
                  "label": "receipts",
                  "type": "t_mapping(t_address,t_struct(Receipt)105_storage)"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_bytes_storage)dyn_storage": {
              "label": "bytes[]"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_struct(Receipt)105_storage)": {
              "label": "mapping(address => struct GovernorAlpha.Receipt)"
            },
            "t_struct(Receipt)105_storage": {
              "label": "struct GovernorAlpha.Receipt",
              "members": [
                {
                  "label": "hasVoted",
                  "type": "t_bool"
                },
                {
                  "label": "support",
                  "type": "t_bool"
                },
                {
                  "label": "votes",
                  "type": "t_uint96"
                }
              ]
            },
            "t_uint96": {
              "label": "uint96"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "LIMEInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TimelockInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "818b6fdc661c2b2eeceae045049fec53e08c5db8e2a4a23d388f04a83ba6d89a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)553_storage)",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)553_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)553_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)3333_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)3333_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)3068_storage"
                }
              ]
            },
            "t_struct(Set)3068_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ab16fdaac2bed5ea58b77587afa968d622226c06b8fcc23c22f04b12d7029876",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PresetMinterPauser": {
        "version": {
          "withMetadata": "0e461a56f019d7bca8d006a1ab590a37648dfb06cd589699c13f1f7fcfdeed4b",
          "withoutMetadata": "a461532f7bf184a2828fdbaaa9ffe87cf7f4d853fde0855a1d5b0dcfba517268",
          "linkedWithoutMetadata": "a461532f7bf184a2828fdbaaa9ffe87cf7f4d853fde0855a1d5b0dcfba517268"
        },
        "inherit": [
          "ERC20Pausable",
          "Pausable",
          "ERC20Burnable",
          "ERC20",
          "IERC20",
          "AccessControl",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20PresetMinterPauser",
            "src": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol:35"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "58fe2efba2715bddc426a2bc522f29758a9236815b26835b25cf8a9509959935",
          "withoutMetadata": "58fe2efba2715bddc426a2bc522f29758a9236815b26835b25cf8a9509959935",
          "linkedWithoutMetadata": "58fe2efba2715bddc426a2bc522f29758a9236815b26835b25cf8a9509959935"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "ceca70f9977da1e211238a1f713a4b6c17438c1df8d97d1bddc54001ae1f9f87",
          "withoutMetadata": "ceca70f9977da1e211238a1f713a4b6c17438c1df8d97d1bddc54001ae1f9f87",
          "linkedWithoutMetadata": "ceca70f9977da1e211238a1f713a4b6c17438c1df8d97d1bddc54001ae1f9f87"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "cc6bced8d4902a88e954a3fde5885f29bdc22b72cef080a87af6efb91e507e69",
          "withoutMetadata": "3c1a0056da312afcd64a2bae1fc46875c39be7a47c3dffbf9b6921d46745c1b9",
          "linkedWithoutMetadata": "3c1a0056da312afcd64a2bae1fc46875c39be7a47c3dffbf9b6921d46745c1b9"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/mocks/yVault/yVault.sol:17"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/mocks/yVault/yVault.sol:19"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/mocks/yVault/yVault.sol:21"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "276887527aa0179a8e536fd6fb0f915e192c79e89b5f612c718e3f3c6ad37b27",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "fbe704e5b071ea035192298b4dea26bba42f0b46609e3e4848ce2ba1350d5b6d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "98e314181acd21a803328dec8e6d4bf9a18729637cfc003c5e06fc759d696c45",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CreditLine": {
        "version": {
          "withMetadata": "06f353cd2e9db93ec7f5e3ca370638a746b503603c02ec00c8cf66f693100361",
          "withoutMetadata": "ddd1e1ba0bf206753fed9756cb730964c99037e1230d94a9e2ffc51641ef94a1",
          "linkedWithoutMetadata": "ddd1e1ba0bf206753fed9756cb730964c99037e1230d94a9e2ffc51641ef94a1"
        },
        "inherit": [
          "CreditLineStorage",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CreditLine",
              "label": "PoolFactory",
              "type": "t_address",
              "src": "contracts/CreditLine/CreditLine.sol:23"
            },
            {
              "contract": "CreditLine",
              "label": "strategyRegistry",
              "type": "t_address",
              "src": "contracts/CreditLine/CreditLine.sol:24"
            },
            {
              "contract": "CreditLine",
              "label": "defaultStrategy",
              "type": "t_address",
              "src": "contracts/CreditLine/CreditLine.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CreditLineStorage": {
        "version": {
          "withMetadata": "423d6a5d43c44d7e4ec536029f5c21aa9dd4b35c42e0a02a2fa3ff98db6ae4f0",
          "withoutMetadata": "134ca74d16d56f759a3c66c7d8d41f9914557e6570961ab726142e9b72507e4d",
          "linkedWithoutMetadata": "134ca74d16d56f759a3c66c7d8d41f9914557e6570961ab726142e9b72507e4d"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CreditLineStorage",
              "label": "CreditLineCounter",
              "type": "t_uint256",
              "src": "contracts/CreditLine/CreditLineStorage.sol:22"
            },
            {
              "contract": "CreditLineStorage",
              "label": "collateralShareInStrategy",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "src": "contracts/CreditLine/CreditLineStorage.sol:58"
            },
            {
              "contract": "CreditLineStorage",
              "label": "creditLineUsage",
              "type": "t_mapping(t_bytes32,t_struct(CreditLineUsageVars)6226_storage)",
              "src": "contracts/CreditLine/CreditLineStorage.sol:59"
            },
            {
              "contract": "CreditLineStorage",
              "label": "creditLineInfo",
              "type": "t_mapping(t_bytes32,t_struct(CreditLineVars)6251_storage)",
              "src": "contracts/CreditLine/CreditLineStorage.sol:60"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_bytes32,t_struct(CreditLineUsageVars)6226_storage)": {
              "label": "mapping(bytes32 => struct CreditLineStorage.CreditLineUsageVars)"
            },
            "t_struct(CreditLineUsageVars)6226_storage": {
              "label": "struct CreditLineStorage.CreditLineUsageVars",
              "members": [
                {
                  "label": "principal",
                  "type": "t_uint256"
                },
                {
                  "label": "totalInterestRepaid",
                  "type": "t_uint256"
                },
                {
                  "label": "lastPrincipalUpdateTime",
                  "type": "t_uint256"
                },
                {
                  "label": "interestAccruedTillPrincipalUpdate",
                  "type": "t_uint256"
                },
                {
                  "label": "collateralAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_bytes32,t_struct(CreditLineVars)6251_storage)": {
              "label": "mapping(bytes32 => struct CreditLineStorage.CreditLineVars)"
            },
            "t_struct(CreditLineVars)6251_storage": {
              "label": "struct CreditLineStorage.CreditLineVars",
              "members": [
                {
                  "label": "exists",
                  "type": "t_bool"
                },
                {
                  "label": "lender",
                  "type": "t_address"
                },
                {
                  "label": "borrower",
                  "type": "t_address"
                },
                {
                  "label": "borrowLimit",
                  "type": "t_uint256"
                },
                {
                  "label": "idealCollateralRatio",
                  "type": "t_uint256"
                },
                {
                  "label": "liquidationThreshold",
                  "type": "t_uint256"
                },
                {
                  "label": "borrowRate",
                  "type": "t_uint256"
                },
                {
                  "label": "borrowAsset",
                  "type": "t_address"
                },
                {
                  "label": "collateralAsset",
                  "type": "t_address"
                },
                {
                  "label": "currentStatus",
                  "type": "t_enum(creditLineStatus)6210"
                },
                {
                  "label": "autoLiquidation",
                  "type": "t_bool"
                },
                {
                  "label": "requestByLender",
                  "type": "t_bool"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_enum(creditLineStatus)6210": {
              "label": "enum CreditLineStorage.creditLineStatus",
              "members": [
                "REQUESTED",
                "ACTIVE",
                "CLOSED",
                "CANCELLED"
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Extension": {
        "version": {
          "withMetadata": "d08935e80dd9a61752f50806ba1ff68a16d0447450f9d236d6fe12e1b887371d",
          "withoutMetadata": "a6888fd5ab9b0aa09a402f969dcec0fad4f68c1b79803363055a6ec9df3180d5",
          "linkedWithoutMetadata": "a6888fd5ab9b0aa09a402f969dcec0fad4f68c1b79803363055a6ec9df3180d5"
        },
        "inherit": [
          "IExtension",
          "Initializable"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Extension",
              "label": "poolInfo",
              "type": "t_mapping(t_address,t_struct(PoolInfo)6305_storage)",
              "src": "contracts/Pool/Extension.sol:27"
            },
            {
              "contract": "Extension",
              "label": "poolFactory",
              "type": "t_contract(IPoolFactory)14580",
              "src": "contracts/Pool/Extension.sol:28"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(PoolInfo)6305_storage)": {
              "label": "mapping(address => struct Extension.PoolInfo)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(PoolInfo)6305_storage": {
              "label": "struct Extension.PoolInfo",
              "members": [
                {
                  "label": "periodWhenExtensionIsPassed",
                  "type": "t_uint256"
                },
                {
                  "label": "totalExtensionSupport",
                  "type": "t_uint256"
                },
                {
                  "label": "extensionVoteEndTime",
                  "type": "t_uint256"
                },
                {
                  "label": "repaymentInterval",
                  "type": "t_uint256"
                },
                {
                  "label": "lastVoteTime",
                  "type": "t_mapping(t_address,t_uint256)"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_contract(IPoolFactory)14580": {
              "label": "contract IPoolFactory"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pool": {
        "version": {
          "withMetadata": "2c22a593ad2102ef7c6c0cc60807c7fd0943f8f14f4ebb19e6cf3c588fc36239",
          "withoutMetadata": "69b6e9eb1fd5c1fe230c56d63309910e6dbe27296d3cbfbd4710d3d9df7d4acb",
          "linkedWithoutMetadata": "69b6e9eb1fd5c1fe230c56d63309910e6dbe27296d3cbfbd4710d3d9df7d4acb"
        },
        "inherit": [
          "IPool",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Pool",
              "label": "PoolFactory",
              "type": "t_address",
              "src": "contracts/Pool/Pool.sol:30"
            },
            {
              "contract": "Pool",
              "label": "poolToken",
              "type": "t_contract(IPoolToken)14603",
              "src": "contracts/Pool/Pool.sol:31"
            },
            {
              "contract": "Pool",
              "label": "lenders",
              "type": "t_mapping(t_address,t_struct(LendingDetails)6733_storage)",
              "src": "contracts/Pool/Pool.sol:68"
            },
            {
              "contract": "Pool",
              "label": "poolConstants",
              "type": "t_struct(PoolConstants)6758_storage",
              "src": "contracts/Pool/Pool.sol:69"
            },
            {
              "contract": "Pool",
              "label": "poolVars",
              "type": "t_struct(PoolVars)6769_storage",
              "src": "contracts/Pool/Pool.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IPoolToken)14603": {
              "label": "contract IPoolToken"
            },
            "t_mapping(t_address,t_struct(LendingDetails)6733_storage)": {
              "label": "mapping(address => struct Pool.LendingDetails)"
            },
            "t_struct(LendingDetails)6733_storage": {
              "label": "struct Pool.LendingDetails",
              "members": [
                {
                  "label": "principalWithdrawn",
                  "type": "t_uint256"
                },
                {
                  "label": "interestWithdrawn",
                  "type": "t_uint256"
                },
                {
                  "label": "lastVoteTime",
                  "type": "t_uint256"
                },
                {
                  "label": "marginCallEndTime",
                  "type": "t_uint256"
                },
                {
                  "label": "extraLiquidityShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(PoolConstants)6758_storage": {
              "label": "struct Pool.PoolConstants",
              "members": [
                {
                  "label": "borrower",
                  "type": "t_address"
                },
                {
                  "label": "borrowAmountRequested",
                  "type": "t_uint256"
                },
                {
                  "label": "minborrowAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "loanStartTime",
                  "type": "t_uint256"
                },
                {
                  "label": "loanWithdrawalDeadline",
                  "type": "t_uint256"
                },
                {
                  "label": "borrowAsset",
                  "type": "t_address"
                },
                {
                  "label": "idealCollateralRatio",
                  "type": "t_uint256"
                },
                {
                  "label": "borrowRate",
                  "type": "t_uint256"
                },
                {
                  "label": "noOfRepaymentIntervals",
                  "type": "t_uint256"
                },
                {
                  "label": "repaymentInterval",
                  "type": "t_uint256"
                },
                {
                  "label": "collateralAsset",
                  "type": "t_address"
                },
                {
                  "label": "poolSavingsStrategy",
                  "type": "t_address"
                }
              ]
            },
            "t_struct(PoolVars)6769_storage": {
              "label": "struct Pool.PoolVars",
              "members": [
                {
                  "label": "baseLiquidityShares",
                  "type": "t_uint256"
                },
                {
                  "label": "extraLiquidityShares",
                  "type": "t_uint256"
                },
                {
                  "label": "loanStatus",
                  "type": "t_enum(LoanStatus)6718"
                },
                {
                  "label": "noOfGracePeriodsTaken",
                  "type": "t_uint256"
                },
                {
                  "label": "nextDuePeriod",
                  "type": "t_uint256"
                }
              ]
            },
            "t_enum(LoanStatus)6718": {
              "label": "enum Pool.LoanStatus",
              "members": [
                "COLLECTION",
                "ACTIVE",
                "CLOSED",
                "CANCELLED",
                "DEFAULTED",
                "TERMINATED"
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PoolFactory": {
        "version": {
          "withMetadata": "df689d0b461430e11ca23522e117be52da2014f4eb05342b647a196cfe82e332",
          "withoutMetadata": "4f4be8c7eb085a166affd67e31c610c94a2ee5950db6709d92117772f4445867",
          "linkedWithoutMetadata": "4f4be8c7eb085a166affd67e31c610c94a2ee5950db6709d92117772f4445867"
        },
        "inherit": [
          "IPoolFactory",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PoolFactory",
              "label": "initializeFunctionId",
              "type": "t_bytes4",
              "src": "contracts/Pool/PoolFactory.sol:24"
            },
            {
              "contract": "PoolFactory",
              "label": "poolImpl",
              "type": "t_address",
              "src": "contracts/Pool/PoolFactory.sol:25"
            },
            {
              "contract": "PoolFactory",
              "label": "userRegistry",
              "type": "t_address",
              "src": "contracts/Pool/PoolFactory.sol:26"
            },
            {
              "contract": "PoolFactory",
              "label": "strategyRegistry",
              "type": "t_address",
              "src": "contracts/Pool/PoolFactory.sol:27"
            },
            {
              "contract": "PoolFactory",
              "label": "extension",
              "type": "t_address",
              "src": "contracts/Pool/PoolFactory.sol:28"
            },
            {
              "contract": "PoolFactory",
              "label": "repaymentImpl",
              "type": "t_address",
              "src": "contracts/Pool/PoolFactory.sol:29"
            },
            {
              "contract": "PoolFactory",
              "label": "priceOracle",
              "type": "t_address",
              "src": "contracts/Pool/PoolFactory.sol:30"
            },
            {
              "contract": "PoolFactory",
              "label": "savingsAccount",
              "type": "t_address",
              "src": "contracts/Pool/PoolFactory.sol:31"
            },
            {
              "contract": "PoolFactory",
              "label": "collectionPeriod",
              "type": "t_uint256",
              "src": "contracts/Pool/PoolFactory.sol:33"
            },
            {
              "contract": "PoolFactory",
              "label": "matchCollateralRatioInterval",
              "type": "t_uint256",
              "src": "contracts/Pool/PoolFactory.sol:34"
            },
            {
              "contract": "PoolFactory",
              "label": "marginCallDuration",
              "type": "t_uint256",
              "src": "contracts/Pool/PoolFactory.sol:35"
            },
            {
              "contract": "PoolFactory",
              "label": "collateralVolatilityThreshold",
              "type": "t_uint256",
              "src": "contracts/Pool/PoolFactory.sol:36"
            },
            {
              "contract": "PoolFactory",
              "label": "gracePeriodPenaltyFraction",
              "type": "t_uint256",
              "src": "contracts/Pool/PoolFactory.sol:37"
            },
            {
              "contract": "PoolFactory",
              "label": "liquidatorRewardFraction",
              "type": "t_uint256",
              "src": "contracts/Pool/PoolFactory.sol:38"
            },
            {
              "contract": "PoolFactory",
              "label": "votingPassRatio",
              "type": "t_uint256",
              "src": "contracts/Pool/PoolFactory.sol:39"
            },
            {
              "contract": "PoolFactory",
              "label": "gracePeriodFraction",
              "type": "t_uint256",
              "src": "contracts/Pool/PoolFactory.sol:40"
            },
            {
              "contract": "PoolFactory",
              "label": "isBorrowToken",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/Pool/PoolFactory.sol:42"
            },
            {
              "contract": "PoolFactory",
              "label": "isCollateralToken",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/Pool/PoolFactory.sol:43"
            },
            {
              "contract": "PoolFactory",
              "label": "openBorrowPoolRegistry",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/Pool/PoolFactory.sol:46"
            },
            {
              "contract": "PoolFactory",
              "label": "poolSizeLimit",
              "type": "t_struct(Limits)9534_storage",
              "src": "contracts/Pool/PoolFactory.sol:48"
            },
            {
              "contract": "PoolFactory",
              "label": "collateralRatioLimit",
              "type": "t_struct(Limits)9534_storage",
              "src": "contracts/Pool/PoolFactory.sol:49"
            },
            {
              "contract": "PoolFactory",
              "label": "borrowRateLimit",
              "type": "t_struct(Limits)9534_storage",
              "src": "contracts/Pool/PoolFactory.sol:50"
            },
            {
              "contract": "PoolFactory",
              "label": "repaymentIntervalLimit",
              "type": "t_struct(Limits)9534_storage",
              "src": "contracts/Pool/PoolFactory.sol:51"
            },
            {
              "contract": "PoolFactory",
              "label": "noOfRepaymentIntervalsLimit",
              "type": "t_struct(Limits)9534_storage",
              "src": "contracts/Pool/PoolFactory.sol:52"
            }
          ],
          "types": {
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_struct(Limits)9534_storage": {
              "label": "struct PoolFactory.Limits",
              "members": [
                {
                  "label": "min",
                  "type": "t_uint256"
                },
                {
                  "label": "max",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PoolToken": {
        "version": {
          "withMetadata": "48349ee5ebe11fa6db706a422f8b9c35f8661bf53f7ec3ab958a316716dc9c8b",
          "withoutMetadata": "48349ee5ebe11fa6db706a422f8b9c35f8661bf53f7ec3ab958a316716dc9c8b",
          "linkedWithoutMetadata": "48349ee5ebe11fa6db706a422f8b9c35f8661bf53f7ec3ab958a316716dc9c8b"
        },
        "inherit": [
          "ERC20PresetMinterPauser",
          "ERC20Pausable",
          "Pausable",
          "ERC20Burnable",
          "ERC20",
          "IERC20",
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PoolToken",
            "src": "contracts/Pool/PoolToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PoolToken",
              "label": "pool",
              "type": "t_address",
              "src": "contracts/Pool/PoolToken.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PriceOracle": {
        "version": {
          "withMetadata": "f0e03dbe1de5450c4e5e76b7038b27b7aabc47e6333f6b2a3b8c55b008e55f3e",
          "withoutMetadata": "ccf4e7f5ac7b04d4a290448f44d89a4fb441d60a2527ee731650d634401106eb",
          "linkedWithoutMetadata": "ccf4e7f5ac7b04d4a290448f44d89a4fb441d60a2527ee731650d634401106eb"
        },
        "inherit": [
          "IPriceOracle",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PriceOracle",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/PriceOracle.sol:10"
            },
            {
              "contract": "PriceOracle",
              "label": "feedAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/PriceOracle.sol:11"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SublimeProxy": {
        "version": {
          "withMetadata": "1113f78119181534af2a5214f3d067592d4283fb08392af4c6d63e9acd45f11e",
          "withoutMetadata": "1113f78119181534af2a5214f3d067592d4283fb08392af4c6d63e9acd45f11e",
          "linkedWithoutMetadata": "1113f78119181534af2a5214f3d067592d4283fb08392af4c6d63e9acd45f11e"
        },
        "inherit": [
          "TransparentUpgradeableProxy",
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SublimeProxy",
            "src": "contracts/Proxy.sol:7"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "RepaymentStorage": {
        "version": {
          "withMetadata": "6cab6fd79e30a9a59dd7bd055cfe483e2b4270485eea08fe4cd400d45e915561",
          "withoutMetadata": "8e16f7c3ff656b867c20de560f5a83cd01e9bfb598dedb75d001b1893b718681",
          "linkedWithoutMetadata": "8e16f7c3ff656b867c20de560f5a83cd01e9bfb598dedb75d001b1893b718681"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RepaymentStorage",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Repayments/RepaymentStorage.sol:7"
            },
            {
              "contract": "RepaymentStorage",
              "label": "poolFactory",
              "type": "t_contract(IPoolFactory)14580",
              "src": "contracts/Repayments/RepaymentStorage.sol:8"
            },
            {
              "contract": "RepaymentStorage",
              "label": "votingPassRatio",
              "type": "t_uint256",
              "src": "contracts/Repayments/RepaymentStorage.sol:19"
            },
            {
              "contract": "RepaymentStorage",
              "label": "gracePenaltyRate",
              "type": "t_uint256",
              "src": "contracts/Repayments/RepaymentStorage.sol:20"
            },
            {
              "contract": "RepaymentStorage",
              "label": "gracePeriodFraction",
              "type": "t_uint256",
              "src": "contracts/Repayments/RepaymentStorage.sol:21"
            },
            {
              "contract": "RepaymentStorage",
              "label": "repaymentDetails",
              "type": "t_mapping(t_address,t_struct(RepaymentDetails)10816_storage)",
              "src": "contracts/Repayments/RepaymentStorage.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IPoolFactory)14580": {
              "label": "contract IPoolFactory"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_struct(RepaymentDetails)10816_storage)": {
              "label": "mapping(address => struct RepaymentStorage.RepaymentDetails)"
            },
            "t_struct(RepaymentDetails)10816_storage": {
              "label": "struct RepaymentStorage.RepaymentDetails",
              "members": [
                {
                  "label": "numberOfTotalRepayments",
                  "type": "t_uint256"
                },
                {
                  "label": "gracePenaltyRate",
                  "type": "t_uint256"
                },
                {
                  "label": "gracePeriodFraction",
                  "type": "t_uint256"
                },
                {
                  "label": "totalRepaidAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "loanDuration",
                  "type": "t_uint256"
                },
                {
                  "label": "repaymentInterval",
                  "type": "t_uint256"
                },
                {
                  "label": "repaymentPeriodCovered",
                  "type": "t_uint256"
                },
                {
                  "label": "repaymentOverdue",
                  "type": "t_uint256"
                },
                {
                  "label": "isLoanExtensionActive",
                  "type": "t_bool"
                },
                {
                  "label": "borrowRate",
                  "type": "t_uint256"
                },
                {
                  "label": "repaymentDetails",
                  "type": "t_uint256"
                },
                {
                  "label": "loanStartTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Repayments": {
        "version": {
          "withMetadata": "400dc376fbe9151999b333291aac42d91c161f88e823fa4dd722f83d75be204c",
          "withoutMetadata": "fc6e06642b5628e6afdbbdd517f95b3e6c4fb6c2e2d48ea1e48c70d073b4cb57",
          "linkedWithoutMetadata": "fc6e06642b5628e6afdbbdd517f95b3e6c4fb6c2e2d48ea1e48c70d073b4cb57"
        },
        "inherit": [
          "IRepayment",
          "RepaymentStorage",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Repayments",
              "label": "PoolFactory",
              "type": "t_address",
              "src": "contracts/Repayments/Repayments.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SavingsAccount": {
        "version": {
          "withMetadata": "a1c94c21ed27eef1ab7318abeeee05ff090e15c23be7f202e304c825326a877b",
          "withoutMetadata": "9f6d066dcf35d766fe6e606ecb1078fd9781c80e8b0dbc00ff7615f53a70596e",
          "linkedWithoutMetadata": "9f6d066dcf35d766fe6e606ecb1078fd9781c80e8b0dbc00ff7615f53a70596e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "ISavingsAccount"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SavingsAccount",
              "label": "strategyRegistry",
              "type": "t_address",
              "src": "contracts/SavingsAccount/SavingsAccount.sol:21"
            },
            {
              "contract": "SavingsAccount",
              "label": "CreditLine",
              "type": "t_address",
              "src": "contracts/SavingsAccount/SavingsAccount.sol:22"
            },
            {
              "contract": "SavingsAccount",
              "label": "userLockedBalance",
              "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
              "src": "contracts/SavingsAccount/SavingsAccount.sol:25"
            },
            {
              "contract": "SavingsAccount",
              "label": "allowance",
              "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
              "src": "contracts/SavingsAccount/SavingsAccount.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
              "label": "mapping(address => mapping(address => mapping(address => uint256)))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Verification": {
        "version": {
          "withMetadata": "a17d7a0d67b045110c48f6858dccb19044d8918e735f2966d9aacfb8a32f0544",
          "withoutMetadata": "b4bb4cb810d1d5a2aa675ff8a0d85be4e5a474c3564755816c016c255f3679c3",
          "linkedWithoutMetadata": "b4bb4cb810d1d5a2aa675ff8a0d85be4e5a474c3564755816c016c255f3679c3"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Verification",
              "label": "registeredUsers",
              "type": "t_mapping(t_address,t_bytes32)",
              "src": "contracts/Verification/Verification.sol:8"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TokenLogic": {
        "version": {
          "withMetadata": "56e2801838f896e967a2802e3d835ba60c00914b773f441731a3cfea8eb4ea95",
          "withoutMetadata": "afa2874be08cc6ff927cc5d8fe7b8cc596c00b2d765a2d65714d519bfec7eb3f",
          "linkedWithoutMetadata": "afa2874be08cc6ff927cc5d8fe7b8cc596c00b2d765a2d65714d519bfec7eb3f"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenLogic",
              "label": "name",
              "type": "t_string_storage",
              "src": "contracts/governance/TokenLogic.sol:9"
            },
            {
              "contract": "TokenLogic",
              "label": "symbol",
              "type": "t_string_storage",
              "src": "contracts/governance/TokenLogic.sol:12"
            },
            {
              "contract": "TokenLogic",
              "label": "decimals",
              "type": "t_uint8",
              "src": "contracts/governance/TokenLogic.sol:15"
            },
            {
              "contract": "TokenLogic",
              "label": "totalSupply",
              "type": "t_uint256",
              "src": "contracts/governance/TokenLogic.sol:18"
            },
            {
              "contract": "TokenLogic",
              "label": "bridgeSupply",
              "type": "t_uint256",
              "src": "contracts/governance/TokenLogic.sol:19"
            },
            {
              "contract": "TokenLogic",
              "label": "allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint96))",
              "src": "contracts/governance/TokenLogic.sol:22"
            },
            {
              "contract": "TokenLogic",
              "label": "balances",
              "type": "t_mapping(t_address,t_uint96)",
              "src": "contracts/governance/TokenLogic.sol:25"
            },
            {
              "contract": "TokenLogic",
              "label": "delegates",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint96))",
              "src": "contracts/governance/TokenLogic.sol:28"
            },
            {
              "contract": "TokenLogic",
              "label": "checkpoints",
              "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)12894_storage))",
              "src": "contracts/governance/TokenLogic.sol:37"
            },
            {
              "contract": "TokenLogic",
              "label": "numCheckpoints",
              "type": "t_mapping(t_address,t_uint32)",
              "src": "contracts/governance/TokenLogic.sol:40"
            },
            {
              "contract": "TokenLogic",
              "label": "DOMAIN_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/governance/TokenLogic.sol:43"
            },
            {
              "contract": "TokenLogic",
              "label": "DELEGATION_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/governance/TokenLogic.sol:46"
            },
            {
              "contract": "TokenLogic",
              "label": "UNDELEGATION_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/governance/TokenLogic.sol:49"
            },
            {
              "contract": "TokenLogic",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/governance/TokenLogic.sol:52"
            },
            {
              "contract": "TokenLogic",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/governance/TokenLogic.sol:55"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint96))": {
              "label": "mapping(address => mapping(address => uint96))"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint96)": {
              "label": "mapping(address => uint96)"
            },
            "t_uint96": {
              "label": "uint96"
            },
            "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)12894_storage))": {
              "label": "mapping(address => mapping(uint32 => struct TokenLogic.Checkpoint))"
            },
            "t_mapping(t_uint32,t_struct(Checkpoint)12894_storage)": {
              "label": "mapping(uint32 => struct TokenLogic.Checkpoint)"
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_struct(Checkpoint)12894_storage": {
              "label": "struct TokenLogic.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32"
                },
                {
                  "label": "votes",
                  "type": "t_uint96"
                }
              ]
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TokenProxy": {
        "version": {
          "withMetadata": "78f36c98ec93812436d3d7cfafbd34c3e899ab030c5ccde7f86a464e644a10e8",
          "withoutMetadata": "78f36c98ec93812436d3d7cfafbd34c3e899ab030c5ccde7f86a464e644a10e8",
          "linkedWithoutMetadata": "78f36c98ec93812436d3d7cfafbd34c3e899ab030c5ccde7f86a464e644a10e8"
        },
        "inherit": [
          "TransparentUpgradeableProxy",
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenProxy",
            "src": "contracts/governance/TokenProxy.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IExtension": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPool": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPoolFactory": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPoolToken": {
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPriceOracle": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRepayment": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ISavingsAccount": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IStrategyRegistry": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IVerification": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IYield": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AaveLendingPool": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DataTypes": {
        "version": {
          "withMetadata": "a45c189d91a26e4e8effa757fc4da498b1d11e67bc7710aec12c343175d330aa",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ICEther": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ICToken": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ILendingPoolAddressesProvider": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IProtocolDataProvider": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IScaledBalanceToken": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IWETHGateway": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IyVault": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Token": {
        "version": {
          "withMetadata": "9fec974dba8ce5a96aa08c1e9d8e232aad834db7b82d5376ddbbada9e237e74d",
          "withoutMetadata": "54f87d7b9d555fc0ee0c6c568f2922228f4a66f4971c11da77cbf4200142e136",
          "linkedWithoutMetadata": "54f87d7b9d555fc0ee0c6c568f2922228f4a66f4971c11da77cbf4200142e136"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/mocks/Token.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Controller": {
        "version": {
          "withMetadata": "4a01c26d9a23b10f4c52d96ef0095694694986e33d9227f0353aecddf139f107",
          "withoutMetadata": "a224a27a2db3ddc49aae46cfadcac7956e98b021a72834a868ef0633a78b7b5c",
          "linkedWithoutMetadata": "a224a27a2db3ddc49aae46cfadcac7956e98b021a72834a868ef0633a78b7b5c"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "Address",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Controller",
            "src": "contracts/mocks/yVault/Controller.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "split",
            "src": "contracts/mocks/yVault/Controller.sol:68"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Controller",
              "label": "governance",
              "type": "t_address",
              "src": "contracts/mocks/yVault/Controller.sol:57"
            },
            {
              "contract": "Controller",
              "label": "strategist",
              "type": "t_address",
              "src": "contracts/mocks/yVault/Controller.sol:58"
            },
            {
              "contract": "Controller",
              "label": "onesplit",
              "type": "t_address",
              "src": "contracts/mocks/yVault/Controller.sol:60"
            },
            {
              "contract": "Controller",
              "label": "rewards",
              "type": "t_address",
              "src": "contracts/mocks/yVault/Controller.sol:61"
            },
            {
              "contract": "Controller",
              "label": "vaults",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts/mocks/yVault/Controller.sol:62"
            },
            {
              "contract": "Controller",
              "label": "strategies",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts/mocks/yVault/Controller.sol:63"
            },
            {
              "contract": "Controller",
              "label": "converters",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "src": "contracts/mocks/yVault/Controller.sol:64"
            },
            {
              "contract": "Controller",
              "label": "approvedStrategies",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/mocks/yVault/Controller.sol:66"
            },
            {
              "contract": "Controller",
              "label": "split",
              "type": "t_uint256",
              "src": "contracts/mocks/yVault/Controller.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Converter": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IStrategy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OneSplitAudit": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IController": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strategy": {
        "version": {
          "withMetadata": "6031704b8abab65c22f1b05be1246dc94dc73bbd683faa1d97a0b354f7c86e99",
          "withoutMetadata": "ec1932a7e3427c3c844c8153859817f9c7bbfc276ad67d17616e411ca9fd856f",
          "linkedWithoutMetadata": "ec1932a7e3427c3c844c8153859817f9c7bbfc276ad67d17616e411ca9fd856f"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "Address",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Strategy",
            "src": "contracts/mocks/yVault/Strategy.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Strategy",
              "label": "want",
              "type": "t_address",
              "src": "contracts/mocks/yVault/Strategy.sol:30"
            },
            {
              "contract": "Strategy",
              "label": "governance",
              "type": "t_address",
              "src": "contracts/mocks/yVault/Strategy.sol:31"
            },
            {
              "contract": "Strategy",
              "label": "controller",
              "type": "t_address",
              "src": "contracts/mocks/yVault/Strategy.sol:32"
            },
            {
              "contract": "Strategy",
              "label": "strategist",
              "type": "t_address",
              "src": "contracts/mocks/yVault/Strategy.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Detailed": {
        "version": {
          "withMetadata": "89c19011a3a8b590d04b332919e69ec83c13438f1f6e53cb410ef443a0510ed8",
          "withoutMetadata": "a5ba1549c6c998ce893e168ef20cfd6d94b1536387efba8cf43d9f37507d77ea",
          "linkedWithoutMetadata": "a5ba1549c6c998ce893e168ef20cfd6d94b1536387efba8cf43d9f37507d77ea"
        },
        "inherit": [
          "ERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Detailed",
            "src": "contracts/mocks/yVault/yVault.sol:165"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Detailed",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/mocks/yVault/yVault.sol:161"
            },
            {
              "contract": "ERC20Detailed",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/mocks/yVault/yVault.sol:162"
            },
            {
              "contract": "ERC20Detailed",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/mocks/yVault/yVault.sol:163"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "WETH": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "yVault": {
        "version": {
          "withMetadata": "ccf4e8553102b9efd337896c9aae5886bd192d560df8e21c22b35ca7cbca33e7",
          "withoutMetadata": "2584a92bd2ed8754c64ff7834990afd47a3a7980dae1a7835b2869d5cdf02110",
          "linkedWithoutMetadata": "2584a92bd2ed8754c64ff7834990afd47a3a7980dae1a7835b2869d5cdf02110"
        },
        "inherit": [
          "ERC20Detailed",
          "ERC20",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "Address",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "yVault",
            "src": "contracts/mocks/yVault/yVault.sol:307"
          },
          {
            "kind": "state-variable-assignment",
            "name": "min",
            "src": "contracts/mocks/yVault/yVault.sol:301"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "yVault",
              "label": "token",
              "type": "t_contract(ERC20)17142",
              "src": "contracts/mocks/yVault/yVault.sol:299"
            },
            {
              "contract": "yVault",
              "label": "min",
              "type": "t_uint256",
              "src": "contracts/mocks/yVault/yVault.sol:301"
            },
            {
              "contract": "yVault",
              "label": "governance",
              "type": "t_address",
              "src": "contracts/mocks/yVault/yVault.sol:304"
            },
            {
              "contract": "yVault",
              "label": "controller",
              "type": "t_address",
              "src": "contracts/mocks/yVault/yVault.sol:305"
            }
          ],
          "types": {
            "t_contract(ERC20)17142": {
              "label": "contract ERC20"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AaveYield": {
        "version": {
          "withMetadata": "5cfb8cf6b7a9fa8c85c8b3ba640a5dde36e8359a9d7e9581c792324d663679d9",
          "withoutMetadata": "d7c11653bf11b73acf475ea41c883f23e2ac3607418f8a0cad25bf80b999365e",
          "linkedWithoutMetadata": "d7c11653bf11b73acf475ea41c883f23e2ac3607418f8a0cad25bf80b999365e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IYield"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AaveYield",
              "label": "wethGateway",
              "type": "t_address",
              "src": "contracts/yield/AaveYield.sol:24"
            },
            {
              "contract": "AaveYield",
              "label": "protocolDataProvider",
              "type": "t_address",
              "src": "contracts/yield/AaveYield.sol:25"
            },
            {
              "contract": "AaveYield",
              "label": "lendingPoolAddressesProvider",
              "type": "t_address",
              "src": "contracts/yield/AaveYield.sol:26"
            },
            {
              "contract": "AaveYield",
              "label": "savingsAccount",
              "type": "t_address_payable",
              "src": "contracts/yield/AaveYield.sol:28"
            },
            {
              "contract": "AaveYield",
              "label": "referralCode",
              "type": "t_uint16",
              "src": "contracts/yield/AaveYield.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_uint16": {
              "label": "uint16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CompoundYield": {
        "version": {
          "withMetadata": "9b7a6219cf1932ca3fdb253ffc8a41327055d3d6d71774b23c4e196c8ad4b8cf",
          "withoutMetadata": "b91063805a0b0948766ab365ba4456a67dba55e3f953ab83abf4249978841642",
          "linkedWithoutMetadata": "b91063805a0b0948766ab365ba4456a67dba55e3f953ab83abf4249978841642"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IYield"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CompoundYield",
              "label": "savingsAccount",
              "type": "t_address_payable",
              "src": "contracts/yield/CompoundYield.sol:21"
            },
            {
              "contract": "CompoundYield",
              "label": "liquidityToken",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts/yield/CompoundYield.sol:26"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StrategyRegistry": {
        "version": {
          "withMetadata": "49a73e7369ba66bcd4bf6b7c599c98ac0afc6eec7c2bbb0ffa190056119510c8",
          "withoutMetadata": "07d7684c1c9b1721e1dc144fa4b3a3baaa16604163cef7da236a510c8c7ebc92",
          "linkedWithoutMetadata": "07d7684c1c9b1721e1dc144fa4b3a3baaa16604163cef7da236a510c8c7ebc92"
        },
        "inherit": [
          "IStrategyRegistry",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "StrategyRegistry",
              "label": "strategies",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/yield/StrategyRegistry.sol:16"
            },
            {
              "contract": "StrategyRegistry",
              "label": "maxStrategies",
              "type": "t_uint256",
              "src": "contracts/yield/StrategyRegistry.sol:17"
            },
            {
              "contract": "StrategyRegistry",
              "label": "registry",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/yield/StrategyRegistry.sol:19"
            }
          ],
          "types": {
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YearnYield": {
        "version": {
          "withMetadata": "c4cfbe528a14009a3b7c8a58840c9a5a9838948cb0a191c39174b98aa73fbbaf",
          "withoutMetadata": "1b30b702aa21f7c2b2bae8dc865eba80863a205f2dd5b39caa92993be81b4508",
          "linkedWithoutMetadata": "1b30b702aa21f7c2b2bae8dc865eba80863a205f2dd5b39caa92993be81b4508"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IYield"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YearnYield",
              "label": "savingsAccount",
              "type": "t_address_payable",
              "src": "contracts/yield/YearnYield.sol:20"
            },
            {
              "contract": "YearnYield",
              "label": "liquidityToken",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts/yield/YearnYield.sol:25"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}